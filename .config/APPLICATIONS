#!/bin/bash
################################################################################
#                                                                              #
#   ▄▀▀▀▀▄  ▄▀▀▀█▀▀▄  ▄▀▀█▄   ▄▀▀▄▀▀▀▄  ▄▀▀▀█▀▀▄  ▄▀▀▄ ▄▀▀▄  ▄▀▀▄▀▀▀▄  ▄▀▀▀▀▄  #
#  █ █   ▐ █    █  ▐ ▐ ▄▀ ▀▄ █   █   █ █    █  ▐ █   █    █ █   █   █ █ █   ▐  #
#     ▀▄   ▐   █       █▄▄▄█ ▐  █▀▀█▀  ▐   █     ▐  █    █  ▐  █▀▀▀▀     ▀▄    #
#  ▀▄   █     █       ▄▀   █  ▄▀    █     █        █    █      █      ▀▄   █   #
#   █▀▀▀    ▄▀       █   ▄▀  █     █    ▄▀          ▀▄▄▄▄▀   ▄▀        █▀▀▀    #
#   ▐      █         ▐   ▐   ▐     ▐   █                    █          ▐       #
#          ▐                           ▐                    ▐                  #
#                                                                              #
################################################################################
#
#   IF [ XDG_SESSION_DESKTOP = "TTY" ]; THEN ECHO "STILL_SAFE_TO_RUN_SCRIPT"; FI
#
#───────────────────────────────────────────────────────────────(EXECUTABLES)───
main() {
    local INPUT="$@"
    local LAUNCH=""
    local UWSM=0

    #───(LIST)
    local APPLICATIONS=(
        "exp_env --local && backup"
        #"dbus-update-activation-environment --systemd --all"   # MANAGED BY AUR:UWSM
        "gnome-keyring-daemon --start --components=secrets"
        "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
        "xdg-autostart"						# AUR:UWSM MANAGED
        "waybar"
        #"wlsunset -s 22:00 -S 10:00 -d 60"
        #"wl-paste --type text --watch cliphist store"
        #"wl-paste --type image --watch cliphist store"
        #───(MINIMIZED_FLAGS)
        #"emacs --daemon"
        #"openrgb --startminimized wayland"
        #"steam -silent wayland"
        #"vesktop --start-minimized wayland"
        #"telegram-desktop -startintray wayland"
        #"youtube-music --use-tray-icon wayland"
        #"teams --startminimized wayland"
    )

	[ command -v uwsm &>/dev/null ] && UWSM=1 || UWSM=0

    #───(MANAGE_EXECUTIONs)
    for APP in "${APPLICATIONS[@]}"; do
        local NAME="${APP%% *}"

        case $INPUT in
            ""|-[Hh]*|--[Hh]*)
                echo -e "\n[ $0 ]\n"
			    echo -e "-[ H/help     ]: Help Menu"
			    echo -e "-[ L/launch   ]: Launch Apps"
			    echo -e "-[ R/relaunch ]: Relaunch Apps"
			    echo -e "-[ K/kill     ]: Kill All Apps"
                break
            ;;
            -[Ll]*|--[Ll]*)
                if ! pgrep -f "$NAME" &>/dev/null; then
                    echo -e "LAUNCHING:\t"$APP""
                    [ $UWSM -eq 1 ] && LAUNCH="uwsm app" || LAUNCH="eval"
                    $LAUNCH "$APP" &>/dev/null &disown
                else
                    ps -C "$NAME" fh -Hw
                fi
		    ;;
            -[Rr]*|--[Rr]*)
                echo -e "RELAUNCHING:\t"$APP""
                [ $UWSM -eq 1 ] && LAUNCH="uwsm stop" || LAUNCH="pkill -9"
                $LAUNCH "$NAME" &>/dev/null
                [ $UWSM -eq 1 ] && LAUNCH="uwsm app" || LAUNCH="eval"
                $LAUNCH "$APP" &>/dev/null &disown
            ;;
	        -[Kk]*|--[Kk]*)
		        echo -e "KILLING:\t"$APP""
                [ $UWSM -eq 1 ] && LAUNCH="uwsm stop" || LAUNCH="pkill -9"
		        $LAUNCH "$NAME" &>/dev/null
	        ;;
		    *)
                echo -e "\n[!] UNKNOWN INPUT: $1\n"
                main -h
                break
		    ;;
        esac
    done
}

#───(START)
main "$@"
